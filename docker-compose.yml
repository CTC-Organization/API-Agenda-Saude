services:
    postgres:
        container_name: agenda_saude_pg
        image: postgres:16.3-alpine3.20
        restart: always
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /data/postgres
        ports:
            - '5432:5432'
        volumes:
            - docker-nest-postgres:/var/lib/postgresql/data
    mongo:
        build:
            context: .
            dockerfile: Dockerfile-mongo
        container_name: mongodb-replicaset
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        ports:
            - 27017:27017
        command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u agenda_saude -p agenda_saude --authenticationDatabase admin
            interval: 5s
            timeout: 15s
            start_period: 15s
            retries: 10
        volumes:
            - data:/data/db

volumes:
    data: {}
    docker-nest-postgres:
    docker-nest-mongo:
